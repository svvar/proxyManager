from aiogram import Router, F, types
from aiogram.utils.keyboard import InlineKeyboardBuilder

from database.operations.website_sync_operations import autosync_on, autosync_off, get_sync_status

sync_router = Router()


@sync_router.message(F.text == '–°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è')
async def toggle_synchronization(message: types.Message):
    status = await get_sync_status()
    if status:
        text = '–°–∏—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –ø–æ—Ä—Ç—ñ–≤ —ñ–∑ —Å–∞–π—Ç–∞–º–∏ —Å–µ–ª–ª–µ—Ä—ñ–≤ *—É–≤—ñ–º–∫–Ω–µ–Ω–∞* üü¢'
    else:
        text = '–°–∏—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –ø–æ—Ä—Ç—ñ–≤ —ñ–∑ —Å–∞–π—Ç–∞–º–∏ —Å–µ–ª–ª–µ—Ä—ñ–≤ *–≤–∏–º–∫–Ω–µ–Ω–∞* üî¥'
    kb = InlineKeyboardBuilder()
    if status:
        kb.button(text='–í–∏–º–∫–Ω—É—Ç–∏ –∞–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é', callback_data='autosync_off')
    else:
        kb.button(text='–£–≤—ñ–º–∫–Ω—É—Ç–∏ –∞–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é', callback_data='autosync_on')

    await message.answer(text, reply_markup=kb.as_markup(resize_keyboard=True), parse_mode='Markdown')


@sync_router.callback_query(F.data == 'autosync_on')
async def autosync_on_callback(callback: types.CallbackQuery):
    await autosync_on()
    await callback.answer('–ê–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é —É–≤—ñ–º–∫–Ω–µ–Ω–æ')
    kb = InlineKeyboardBuilder()
    kb.button(text='–í–∏–º–∫–Ω—É—Ç–∏ –∞–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é', callback_data='autosync_off')
    await callback.message.edit_text('–°–∏—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –ø–æ—Ä—Ç—ñ–≤ —ñ–∑ —Å–∞–π—Ç–∞–º–∏ —Å–µ–ª–ª–µ—Ä—ñ–≤ *—É–≤—ñ–º–∫–Ω–µ–Ω–∞* üü¢',
                                     parse_mode='Markdown',
                                     reply_markup=kb.as_markup(resize_keyboard=True))


@sync_router.callback_query(F.data == 'autosync_off')
async def autosync_off_callback(callback: types.CallbackQuery):
    await autosync_off()
    await callback.answer('–ê–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é –≤–∏–º–∫–Ω–µ–Ω–æ')
    kb = InlineKeyboardBuilder()
    kb.button(text='–£–≤—ñ–º–∫–Ω—É—Ç–∏ –∞–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—é', callback_data='autosync_on')
    await callback.message.edit_text('–°–∏—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –ø–æ—Ä—Ç—ñ–≤ —ñ–∑ —Å–∞–π—Ç–∞–º–∏ —Å–µ–ª–ª–µ—Ä—ñ–≤ *–≤–∏–º–∫–Ω–µ–Ω–∞* üî¥',
                                     parse_mode='Markdown',
                                     reply_markup=kb.as_markup(resize_keyboard=True))
